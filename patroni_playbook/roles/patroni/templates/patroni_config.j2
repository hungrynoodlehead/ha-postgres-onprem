scope: postgresql-cluster
namespace: /service/
name: {{ ansible_hostname }}

etcd3:
  hosts: {% for ip in cluster_hosts.values() -%}{{ ip }}:2379{% if not loop.last %},{% endif %}{%- endfor %}  # Specify etcd cluster
  protocol: http

restapi:
  listen: 0.0.0.0:8008
  connect_address: {{ ansible_default_ipv4.address }}:8008 

bootstrap:
  dcs:
    ttl: 30
    loop_wait: 10
    retry_timeout: 10
    maximum_lag_on_failover: 1048576  # Failover parameters
    postgresql:
        pg_hba:  # Access rules
        - host replication replicator 127.0.0.1/32 md5
{% for ip in cluster_hosts.values() %}
        - host replication replicator {{ ip }}/32 md5 # Allow replicator connect from other nodes IP
{% endfor %}
        - host all all 127.0.0.1/32 md5
        - host all all 0.0.0.0/0 md5
  initdb:
    - encoding: UTF8
    - data-checksums

postgresql:
  listen: 0.0.0.0:5432
  connect_address: {{ ansible_default_ipv4.address }}:5432
  data_dir: /var/lib/postgresql/data
  bin_dir: /usr/lib/postgresql/17/bin
  authentication:
    superuser:
      username: postgres
      password: {{ patroni_postgres_root_password }}
    replication:
      username: replicator
      password: {{ patroni_postgres_replicator_password }}
  parameters:
    max_connections: 100
    shared_buffers: 256MB

tags:
  nofailover: false
  noloadbalance: false
  clonefrom: false